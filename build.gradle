buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.22.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
    }
}

plugins {
    id 'java'
   // id 'application'
    id "com.google.cloud.tools.jib" version "3.1.1"
}

group 'io.confluent.cse'
version '1.0-SNAPSHOT'

repositories {

    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }

}



apply plugin: "com.commercehub.gradle.plugin.avro"
apply plugin: "com.github.johnrengelman.shadow"

// ccs
dependencies {
    implementation "org.apache.avro:avro:1.10.2"
    implementation "org.slf4j:slf4j-simple:1.7.30"
    implementation "org.apache.kafka:kafka-streams:2.8.1"
    implementation "io.confluent:kafka-streams-avro-serde:6.2.1"
    implementation 'com.google.code.gson:gson:2.8.8'
    testImplementation "org.apache.kafka:kafka-streams-test-utils:2.8.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
        exceptionFormat = "full"
    }
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
                "Main-Class": "io.confluent.cse.DataProducer"
        )
    }
}

shadowJar {
    archiveBaseName = "kafka-streams-app"
    archiveClassifier = ''
}
